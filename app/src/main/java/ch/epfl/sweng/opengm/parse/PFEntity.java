package ch.epfl.sweng.opengm.parse;

import android.os.Parcelable;

/**
 * This abstract class represents an abstraction of an object that is stored on the server.
 * Each table online must be associated with its own class which extends this one.
 */
abstract class PFEntity implements Parcelable {

    protected final String mId;
    private final String mParseTable;

    /**
     * @param id        The id generated by the server for this object
     * @param tableName The table this entity is retrieved from
     */
    protected PFEntity(String id, String tableName) {
        if (id == null || id.isEmpty()) {
            throw new IllegalArgumentException("Id is null or empty");
        }
        if (tableName == null || tableName.isEmpty()) {
            throw new IllegalArgumentException("Table name is null or empty");
        }
        mId = id;
        mParseTable = tableName;
    }

    /**
     * @return the id of the current entity
     */
    public String getId() {
        return this.mId;
    }

    /**
     * This method updates in background the data but only the information which have changed since the last time
     *
     * @param entry The entry to be updated in the current table
     * @throws PFException If the server cannot be reach, if the object for this id is not found or if another parse exception happens
     */
    protected abstract void updateToServer(String entry) throws PFException;

    @Override
    public String toString() {
        return "[parseTable = " + mParseTable + " | id = " + mId + " ]";
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PFEntity that = (PFEntity) o;
        return mId.equals(that.mId) && mParseTable.equals(that.mParseTable);

    }

    @Override
    public int hashCode() {
        int result = mId.hashCode();
        result = 31 * result + mParseTable.hashCode();
        return result;
    }

}